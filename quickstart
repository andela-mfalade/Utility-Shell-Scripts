#! /bin/bash

# A simple script to help you quickly create a project directory.
# This creates a directory with well structured files suitable for each programming language
# For now, it creates an angular, node-express, and a flask project directory
# Usage
# quickstart flask - To quickly create a flask project structure. 
# quickstart python - To quickly create a simple disposable python utility script
# quickstart mean - To create a mean stack application
# Note that this creates the project directory in your current working directory
# To specify the project directory, use the --dir flag
# Author - Falade Mayowa
# Email - mayowa.falade@andela.com



if [[ $# -eq 0 ]]; then
	
	echo ""
	echo "Usage: quickstart <project-stack> <directory-name>"
	echo ""
	echo "Supported project-stacks are:"
	echo "    flask, python, express"
	echo ""
	echo "Example Usage: 'quickstart flask <project-name>'"
	echo ""
	exit 1

fi



if [[ $1 = 'flask' || $1 = 'python' || $1 = 'express' || $1 = 'node' || $1 = 'nodejs' ]]; then

	if [[ ! $2 ]]; then
		
		echo ""
		echo "You need to specify a name for your project"
		echo ""
		echo "Example:"
		echo ""
		echo "'quickstart ${1} mySuperAwesomeProject'"
		echo ""
		exit 1
	
	fi

else
	
	echo ""
	echo "Sorry, we currently do not quickstart '${1}' projects."
	echo ""
	echo "Supported projects are:"
	echo ""
	echo "1. flask"
	echo "    Example usage: 'quickstart flask <project-name>'"
	echo ""
	echo "2. python"
	echo "    Example usage: 'quickstart python <project-name>'"
	echo ""
	echo "3. express"
	echo "    Example usage: 'quickstart express <project-name>'"
	echo ""
	exit 1
	
fi
		

curr_dir=`pwd`
framework="${1}"
project_name="${2}"
file_path="${curr_dir}/${project_name}"



if [[ -d "${file_path}"  ]]; then

	echo "A directory with name '${project_name}' already exists."
	exit 1

fi


case $framework in

	'express')
		mkdir "$file_path" 
		mkdir "${file_path}/controllers"
		mkdir "${file_path}/middlewares"
		mkdir "${file_path}/models"
		mkdir "${file_path}/routes"
		mkdir "${file_path}/helpers"
		mkdir "${file_path}/tests"
		mkdir "${file_path}/tests/controllers"
		mkdir "${file_path}/tests/middlewares"
		mkdir "${file_path}/tests/helpers"
		touch "${file_path}/.gitignore"
		touch "${file_path}/app.js"
		touch "${file_path}/package.json"
		;;
	'flask')
		mkdir "${file_path}"
		mkdir "${file_path}/test"
		mkdir "${file_path}/${project_name}"
		mkdir "${file_path}/${project_name}/module1"
		mkdir "${file_path}/${project_name}/module2"
		touch "${file_path}/${project_name}/module1/__init__.py"
		touch "${file_path}/${project_name}/module2/__init__.py"
		touch "${file_path}/setup.py"
		touch "${file_path}/.gitignore"
		echo '*.pyc' >> "${file_path}/.gitignore" 
		touch "${file_path}/requirements.txt"
		touch "${file_path}/manage.py"
		touch "${file_path}/${project_name}/__init__.py"
		touch "${file_path}/${project_name}/config.py"
		;;

esac


echo ""
echo "Created a new '${framework}' project structure for ${project_name}. Enjoy!"
echo ""
exit 0






